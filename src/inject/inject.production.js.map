{"version":3,"sources":["webpack://@tencent/extra-source-replace-tool/./src/inject/inject.js","webpack://@tencent/extra-source-replace-tool/./src/utils/url-parser.js","webpack://@tencent/extra-source-replace-tool/webpack/bootstrap"],"names":["global","transformCgi","URL_VALID_CHARS","VALID_CHARS","pathname","replace","split","join","host","hash","search","URL_REGS","protocol","_w","name","group","Object","keys","forEach","v","URL_ORIGIN_REG","protocol_g","host_g","URL_TAIL_REG","pathname_g","hash_g","search_g","URL_REG","RegExp","URL_ORIGIN_NO_GROUP","URL_SEARCH_NO_GROUP","URL_TAIL_NO_GROUP","URL_REG_NO_GROUP","URL_REG_NO_GROUP_ALL","source","flags","testUrl","str","all","test","execUrlNormalize","groups","options","defaultProtocol","key","undefined","origin","href","hostname","port","startsWith","tail","parseUrl","res","exec","FULL_INFO_CACHE","Map","getUrlFullInfo","incomplete","has","get","location","ext","inside","origins","includes","set","URL_STYLE_REG","getExecResult","reg","cur","condition","regG","result","push","module","exports","parseStyleUrl","execUrl","execStyleUrl","url","urlObj","Error","blockExtraUrl","blockPaths","l1Paths","l1PathMap","some","indexOf","levelPaths","filter","l2PathMap","blockIntraUrl","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","require","window","CORE_OPTIONS","JSON","parse","log","action","style","console","value","reduce","blockAjax","oldMethod","this","readyState","OPENED","apply","slice","call","arguments","oldMethodName","toString","toUpperCase","aegisUrl","XMLHttpRequest","prototype","option","target","methodName","urlArgIndex","newUrl","customMethod","replaceMethods"],"mappings":"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","file":"inject.production.js","sourcesContent":["const { transformCgi } = require('../utils/url-parser');\n\nwindow.CORE_OPTIONS = JSON.parse('__OPTIONS__');\nCORE_OPTIONS.blockExtraUrl = true;\n\n((global) => {\n    function replaceMethods() {\n        var options = [\n            {\n                'target': XMLHttpRequest.prototype,\n                'methodName': 'open',\n                'urlArgIndex': 1\n            },\n            {\n                'target': global,\n                'methodName': 'open',\n                'urlArgIndex': 0\n            },\n            {\n                'target': XMLHttpRequest.prototype,\n                'methodName': 'setRequestHeader',\n                'customMethod': blockAjax\n            },\n            {\n                'target': XMLHttpRequest.prototype,\n                'methodName': 'send',\n                'customMethod': blockAjax\n            },\n        ];\n        options.forEach(replaceMethod);\n\n        function log(action, source, style) {\n            if (!global.console) return;\n            var value = '%c[local]api ' + action + ': ' + source\n            style = Object.keys(style).reduce(function (value, cur) {\n                return value + cur + ':' + style[cur] + ';'\n            }, '')\n            global.console.log(value, style);\n        }\n\n        function blockAjax(oldMethod) {\n            return function () {\n                if (this.readyState !== this.OPENED) {\n                    var oldMethodName = /function (\\w+)\\(/.exec(oldMethod.toString());\n                    oldMethodName = oldMethodName ? oldMethodName[1].toUpperCase() : '';\n                    log('block', oldMethodName + '=>' + this.aegisUrl, {\n                        'color': 'lightseagreen',\n                        'font-size': '14px'\n                    })\n                    return;\n                }\n                return oldMethod.apply(this, [].slice.call(arguments));\n            }\n        }\n        function replaceMethod(option) {\n            var oldMethod = option.target[option.methodName];\n            if (typeof option.urlArgIndex === 'number') {\n                option.target[option.methodName] = function () {\n                    var newUrl = transformCgi(arguments[option.urlArgIndex], CORE_OPTIONS);\n                    log('proxy', '', {\n                        'color': '#ff008a',\n                        'font-size': '14px'\n                    })\n                    log('origin', arguments[option.urlArgIndex], {\n                        'color': 'aqua',\n                        'font-size': '12px'\n                    })\n                    log('target', newUrl, {\n                        'color': '#69e147',\n                        'font-size': '12px'\n                    })\n                    arguments[option.urlArgIndex] = newUrl;\n                    if (arguments[option.urlArgIndex]) return oldMethod.apply(this, [].slice.call(arguments));\n                }\n            }\n            if (typeof option.customMethod === 'function') {\n                option.target[option.methodName] = function () {\n                    return option.customMethod(oldMethod).apply(this, [].slice.call(arguments));\n                };\n            }\n        }\n    }\n\n    replaceMethods();\n})(window);","const URL_VALID_CHARS = `-_.~!*'();:@&=+$,/?#%`\nconst VALID_CHARS = {\n  pathname: 'a-z0-9\\\\' + URL_VALID_CHARS.replace(/[;:@&=+$,/?#'%]/g, '').split('').join('\\\\'),\n  host: 'a-z0-9\\\\' + URL_VALID_CHARS.replace(/[.;:@&=+$,/?#'%]/g, '').split('').join('\\\\'),\n  hash: 'a-z0-9\\\\' + URL_VALID_CHARS.replace(/[?#']/g, '').split('').join('\\\\'),\n  search: 'a-z0-9\\\\' + URL_VALID_CHARS.replace(/[?#']/g, '').split('').join('\\\\'),\n}\nconst URL_REGS = {\n  protocol: `(https?:)?\\\\/\\\\/`,\n  pathname: `(^[${VALID_CHARS.pathname}]+)?((\\\\/[${VALID_CHARS.pathname}]+)+\\\\/?|\\\\/)`,\n  host: `([${VALID_CHARS.host}])+(\\\\.[${VALID_CHARS.host}]+)+(\\\\:\\\\d+)?`,\n  hash: `#[${VALID_CHARS.hash}]*`,\n  search: `\\\\?[${VALID_CHARS.search}]*`\n}\nconst _w = (name, group) => `(${group ? `?<${name}>` : ''}${URL_REGS[name]})`\nObject.keys(URL_REGS).forEach(v => {\n  URL_REGS[v + '_g'] = _w(v, true)\n  URL_REGS[v] = _w(v)\n})\n\nconst URL_ORIGIN_REG = `(?<origin>${URL_REGS.protocol_g}${URL_REGS.host_g})`\nconst URL_TAIL_REG = `(?<tail>${URL_REGS.pathname_g}?(${URL_REGS.hash_g}|${URL_REGS.search_g})?)`\nconst URL_REG = new RegExp(`${URL_ORIGIN_REG}?${URL_TAIL_REG}`, 'i')\n\nconst URL_ORIGIN_NO_GROUP = `(${URL_REGS.protocol}${URL_REGS.host})`\nconst URL_SEARCH_NO_GROUP = `(${URL_REGS.hash}|${URL_REGS.search})`\nconst URL_TAIL_NO_GROUP = `(${URL_REGS.pathname}${URL_SEARCH_NO_GROUP}?|${URL_SEARCH_NO_GROUP})`\nconst URL_REG_NO_GROUP = new RegExp(`(${URL_ORIGIN_NO_GROUP}${URL_TAIL_NO_GROUP}?)|(${URL_TAIL_NO_GROUP})`, 'i')\nconst URL_REG_NO_GROUP_ALL = new RegExp(`^(${URL_REG_NO_GROUP.source})$`, URL_REG.flags)\n\nconst testUrl = (str, all) => str && (all ? URL_REG_NO_GROUP_ALL : URL_REG_NO_GROUP).test(str)\n\nconst execUrlNormalize = (groups, options = {}) => {\n  const defaultProtocol = options.protocol || 'http'\n  Object.keys(groups).forEach(key => {\n    if (key === 'protocol') {\n      if (groups[key] !== undefined) {\n        const [protocol, slash] = groups[key].split(':')\n        if (!slash) {\n          groups[key] = defaultProtocol\n          groups.origin = defaultProtocol + ':' + groups.origin\n          groups.href = defaultProtocol + ':' + groups.href\n        } else {\n          groups[key] = protocol\n        }\n      } else {\n        groups[key] = defaultProtocol\n\n        // if host exist, protocol must not be empty\n        // const protocolWidthSlash = defaultProtocol + '://'\n        // if (groups.host) {\n        //   // host exist\n        //   groups.origin = protocolWidthSlash + groups.origin\n        //   groups.href = protocolWidthSlash + groups.href\n        // }\n      }\n    } else if (key === 'host') {\n      if (groups[key] !== undefined) {\n        const [hostname, port] = groups[key].split(':')\n        groups.hostname = hostname\n        groups.port = port\n      }\n    } else if (key === 'pathname') {\n      if (groups[key] !== undefined && !groups[key].startsWith('/')) {\n        groups[key] = '/' + groups[key]\n      }\n    }\n    if (groups[key] === undefined) {\n      groups[key] = ''\n    }\n  })\n  return groups.origin || groups.tail ? groups : null\n}\n\nconst parseUrl = (str, options = {}) => {\n  if (str === undefined) return null\n  let res = URL_REG.exec(str)\n  if (!res || res[0] !== str) return null\n  res = {\n    href: res[0],\n    ...res.groups\n  }\n  return execUrlNormalize(res, options)\n}\n\nconst FULL_INFO_CACHE = new Map()\nconst getUrlFullInfo = (str, incomplete, options = {}) => {\n  if (!incomplete && FULL_INFO_CACHE.has(str)) return FULL_INFO_CACHE.get(str)\n  const location = parseUrl(str, options)\n  if (!location || !location.host && !location.pathname) return null\n  location.ext = ''\n  location.inside = !!(!location.host && location.pathname || options.origins && options.origins.includes(location.origin))\n  // empty ext regarded as source, though cgi\n  if (!incomplete) {\n    location.ext = (/\\.([0-0a-z]+)$/i.exec(location.pathname) || [])[1] || ''\n    FULL_INFO_CACHE.set(str, location)\n  }\n  return location\n}\n\nconst URL_STYLE_REG = /url\\((?<origin>(['\"]?)(?<href>[^'\" ]+)\\2)\\)/i\n\nconst parseStyleUrl = (str, test) => {\n  let res = URL_STYLE_REG.exec(str)\n  if (!res) return null\n  const isValid = !test || testUrl(res.groups.href, true)\n  return isValid ? res.groups : null\n}\n\nconst getExecResult = (str, reg, condition = true) => {\n  const regG = new RegExp(reg, 'g')\n  const result = []\n  let cur\n  while (cur = regG.exec(str)) {\n    if (!cur[0]) break\n    if (typeof condition === 'function' ? condition(cur) : condition) {\n      result.push(cur.groups)\n    }\n  }\n  return result\n}\n\nconst execUrl = (str) => getExecResult(str, URL_REG)\n\nconst execStyleUrl = (str, test) => getExecResult(str, URL_STYLE_REG, (cur) => !test || testUrl(cur.groups.href, true))\n\nconst transformCgi = (url, options = {}) => {\n  // use options\n  if (typeof options.transformCgi === 'function') return options.transformCgi(url)\n  if (!url) return ''\n  let urlObj = url\n  if (typeof url === 'object') {\n    url = url.href || ''\n  } else if (typeof url === 'string') {\n    urlObj = getUrlFullInfo(url, true, options)\n  } else {\n    // console.error(`esrt transformCgi error! ${typeof url}`)\n    // console.error(url)\n    throw new Error('url`s type must be object or string!')\n  }\n  // not url\n  if (!urlObj) return url\n  // extra\n  if (!urlObj.inside) return options.blockExtraUrl ? '' : url\n  // block path\n  if (options.blockPaths.includes(urlObj.pathname)) return ''\n  const l1Paths = Object.keys(options.l1PathMap)\n  // don`t need to transform\n  if (l1Paths.some((key) => urlObj.pathname.indexOf(options.l1PathMap[key]) === 0)) return url\n  const levelPaths = urlObj.pathname.split('/').filter(v => v)\n  // can`t transform\n  if (!l1Paths.includes(levelPaths[0])) return options.blockIntraUrl ? '' : url\n  levelPaths[0] = options.l1PathMap[levelPaths[0]]\n  levelPaths[1] = options.l2PathMap[levelPaths[1]] || levelPaths[1]\n  return levelPaths.join('/') + (urlObj.hash || urlObj.search)\n}\n\nmodule.exports = {\n  testUrl,\n  getUrlFullInfo,\n  parseStyleUrl,\n  execUrl,\n  execStyleUrl,\n  transformCgi\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n"],"sourceRoot":""}